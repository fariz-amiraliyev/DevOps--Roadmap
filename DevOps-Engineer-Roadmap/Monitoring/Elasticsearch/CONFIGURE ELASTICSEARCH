Mapping Roles to Users
Role mapping is the most critical aspect of fine-grained access control. Fine-grained access
control has some predefined roles to help you get started, but unless you map roles to users,
every request to the cluster ends in a permissions error.

Backend roles offer another way of mapping roles to users. Rather than mapping the same role
to dozens of different users, you can map the role to a single backend role, and then make
sure that all users have that backend role. Backend roles can be IAM roles or arbitrary strings
that you specify when you create users in the internal user database.

We will add the Fluent Bit ARN as a backend role to the all_access role using the Elasticsearch API

# We need to retrieve the Fluent Bit Role ARN
export FLUENTBIT_ROLE=$(eksctl get iamserviceaccount --cluster eksworkshop-eksctl --namespace logging -o json | jq '.iam.serviceAccounts[].status.roleARN' -r)

# Get the Elasticsearch Endpoint
export ES_ENDPOINT=$(aws es describe-elasticsearch-domain --domain-name ${ES_DOMAIN_NAME} --output text --query "DomainStatus.Endpoint")

# Update the Elasticsearch internal database
curl -sS -u "${ES_DOMAIN_USER}:${ES_DOMAIN_PASSWORD}" \
    -X PATCH \
    https://${ES_ENDPOINT}/_opendistro/_security/api/rolesmapping/all_access?pretty \
    -H 'Content-Type: application/json' \
    -d'
[
  {
    "op": "add", "path": "/backend_roles", "value": ["'${FLUENTBIT_ROLE}'"]
  }
]
'
