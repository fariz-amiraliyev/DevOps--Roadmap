Amazon EKS managed nodegroups is a feature that automates the provisioning and
lifecycle management of nodes (EC2 instances) for Amazon EKS Kubernetes clusters.
Customers can provision optimized groups of nodes for their clusters and EKS will
keep their nodes up to date with the latest Kubernetes and host OS versions.


An EKS managed node group is an autoscaling group and associated EC2 instances that
are managed by AWS for an Amazon EKS cluster. Each node group uses the Amazon EKS-optimized
Amazon Linux 2 AMI. Amazon EKS makes it easy to apply bug fixes and security patches to nodes,
as well as update them to the latest Kubernetes versions. Each node group launches an autoscaling
group for your cluster, which can span multiple AWS VPC availability zones and subnets for high-availability.

It's possible to have a cluster with both managed and unmanaged nodegroups.
Unmanaged nodegroups do not show up in the AWS EKS console but eksctl get nodegroup
will list both types of nodegroups.




Creating managed nodegroups:

eksctl create cluster --managed
Listing nodegroups
To list the details about a nodegroup or all of the nodegroups, use:
eksctl get nodegroup --cluster=<clusterName> [--name=<nodegroupName>]



eksctl create nodegroup --config-file=cluster.yaml
To create multiple managed nodegroups and have more control over the configuration, a config file can be used.

# cluster.yaml
# A cluster with two managed nodegroups
---
apiVersion: eksctl.io/v1alpha5
kind: ClusterConfig

metadata:
  name: managed-cluster
  region: us-west-2

managedNodeGroups:
  - name: managed-ng-1
    minSize: 2
    maxSize: 4
    desiredCapacity: 3
    volumeSize: 20
    ssh:
      allow: true
      publicKeyPath: ~/.ssh/ec2_id_rsa.pub
      # new feature for restricting SSH access to certain AWS security group IDs
      sourceSecurityGroupIds: ["sg-00241fbb12c607007"]
    labels: {role: worker}
    tags:
      nodegroup-role: worker
    iam:
      withAddonPolicies:
        externalDNS: true
        certManager: true

  - name: managed-ng-2
    instanceType: t2.large
    minSize: 2
    maxSize: 3


Upgrading managed nodegroups
eksctl upgrade nodegroup --name=managed-ng-1 --cluster=managed-cluster
eksctl upgrade nodegroup --name=managed-ng-1 --cluster=managed-cluster --kubernetes-version=1.14
eksctl utils nodegroup-health --name=managed-ng-1 --cluster=managed-cluster
eksctl set labels --cluster managed-cluster --nodegroup managed-ng-1 --labels kubernetes.io/managed-by=eks,kubernetes.io/role=worker
eksctl unset labels --cluster managed-cluster --nodegroup managed-ng-1 --labels kubernetes.io/managed-by,kubernetes.io/role
eksctl scale nodegroup --name=managed-ng-1 --cluster=managed-cluster --nodes=4 --nodes-min=3 --nodes-max=5
